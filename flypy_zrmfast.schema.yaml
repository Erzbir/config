# Rime schema
# encoding: utf-8

schema:
  schema_id: flypy_zrmfast
  name: 小鹤快手 # 鹤拼快形 
  version: "0.1"
  author:
    - Functoreality
  description: |
    小鹤双拼，自然快手辅助码
  dependencies:
    - stroke

switches:
  - name: ascii_mode
    reset: 0
    states: [ 中文, 西文 ]
  - name: emoji_suggestion
    reset: 1
    states: [ "No", "Yes" ]
  - name: full_shape
    states: [ 半角, 全角 ]
  - name: simplification
    reset: 1
    states: [ 漢字, 汉字 ]
  - name: ascii_punct
    states: [ 。，, ．， ]

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - affix_segmentor@quanpin
    - affix_segmentor@emojis
    - affix_segmentor@verbatim ## not as the last of this list
    - affix_segmentor@soft_capslock
    - affix_segmentor@dbpy_flypy_help
    - affix_segmentor@easy_en_simp
    - affix_segmentor@tex_translator
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator@custom_phrase
    - reverse_lookup_translator
    - script_translator
    - script_translator@quanpin
    - table_translator@emojis
    - table_translator@soft_capslock
    - table_translator@dbpy_flypy_help
    - lua_translator@tex_translator
    - lua_translator@func_translator
    - table_translator@easy_en_simp ## 添加注释后：停用单词输入
  filters:
    - simplifier
    - uniquifier

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba[
  initials: zyxwvutsrqponmlkjihgfedcba
  delimiter: " '"
  ## speller 未允许 aj 表示 an
  algebra:
    - derive/^(..).+$/$1/
    - derive/^(..[[].).+$/$1/
    - derive/^([jqxy])u/$1v/
    #- xform/[[]// ## 取消注释后：直接引导辅助码

translator:
  dictionary: flypy_zrmfast


custom_phrase:
  dictionary: ""
  user_dict: custom_phrase
  db_class: stabledb
  enable_completion: false
  enable_sentence: false
  initial_quality: 1

reverse_lookup:
  dictionary: stroke
  enable_completion: true
  prefix: "`"
  suffix: "'"
  tips: 〔筆畫〕
  preedit_format:
    - xlit/hspnz/一丨丿丶乙/
  comment_format:
    - xform/([nl])v/$1ü/


key_binder:
  import_preset: default
  bindings:
    #- { when: composing, accept: Tab, send: '[' } ## 取消注释后：tab引导辅助码
    - { when: composing, accept: Control+m, send: Return }
    - { when: composing, accept: Control+w, send: Control+BackSpace }
    - { when: has_menu, accept: semicolon, send: 2 }
    - { when: has_menu, accept: slash, send: 3 }
    - { when: composing, accept: Control+i, send: Shift+Right }
    - { when: composing, accept: Control+o, send: Shift+Left }
    ## 对以下4行取消注释后：启用光标回退至特定音节后、补充辅助码的功能
    ## （自然码等其他双拼用户请在 pinyin_switch.yaml 中设置）
    #- { when: composing, accept: Control+1, send_sequence: '{Home}{Shift+Right}[' }
    #- { when: composing, accept: Control+2, send_sequence: '{Home}{Shift+Right}{Shift+Right}[' }
    #- { when: composing, accept: Control+3, send_sequence: '{Home}{Shift+Right}{Shift+Right}{Shift+Right}[' }
    #- { when: composing, accept: Control+4, send_sequence: '{Home}{Shift+Right}{Shift+Right}{Shift+Right}{Shift+Right}[' }

recognizer:
  # import_preset: default
  patterns:
    uppercase: ""
    punct: ""
    reverse_lookup: "^ab[a-z]*'?$" # "[[]b[a-z]*'?$"

punctuator:
  import_preset: default


